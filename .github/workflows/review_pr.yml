name: AI Code Review with ChatGPT

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install @octokit/rest openai --save-dev

      - name: Run AI Code Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          node -e '
            (async () => {
              try {
                const { Octokit } = await import("@octokit/rest");
                const OpenAI = await import("openai");

                const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
                const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
                const pull_number = process.env.GITHUB_REF.split("/")[2];

                const prResponse = await octokit.pulls.get({
                  owner,
                  repo,
                  pull_number,
                });
                const prTitle = prResponse.data.title;
                const prBody = prResponse.data.body || "No description provided";

                const filesResponse = await octokit.pulls.listFiles({
                  owner,
                  repo,
                  pull_number,
                });

                const files = filesResponse.data.map(f => {
                  return `${f.filename} (Status: ${f.status}):\n` +
                         `Changes:\n${f.patch || "No changes"}\n` +
                         `Lines added: ${f.additions}, Lines removed: ${f.deletions}`;
                }).join("\n\n");

                // Kiểm tra kích thước dữ liệu gửi lên
                if (files.length > 50000) {
                  throw new Error("PR quá lớn để review tự động. Vui lòng chia nhỏ PR.");
                }

                const openai = new OpenAI.default({
                  apiKey: process.env.OPENAI_API_KEY,
                });

                const aiResponse = await openai.chat.completions.create({
                  model: "gpt-4o-mini",
                  messages: [
                    {
                      role: "system",
                      content: "Bạn là một senior developer với 10+ năm kinh nghiệm thực chiến. Hãy review code trong pull request này một cách chi tiết và thực tế:\n" +
                               "Consider:\n" +
                               "1. **Bugs/Edge cases**: Tìm lỗi logic, bug nghiêm trọng, hoặc trường hợp biên chưa xử lý.\n" +
                               "2. **Performance**: Chỉ ra đoạn code kém tối ưu (CPU, memory, I/O) và cách cải thiện.\n" +
                               "3. **Readability**: Kiểm tra code có dễ hiểu không (đặt tên, cấu trúc, comment); đề xuất cách làm rõ hơn.\n" +
                               "4. Kiểm tra xem các hàm đã có docs-comment chưa, nếu chưa có thì đề xuất cách làm rõ hơn.\n" +
                               "Trả lời bằng bullet points, mỗi điểm kèm: đoạn code lỗi (nếu có), đường dẫn file, code mẫu để fix, và lý do ngắn gọn. Tập trung vào vấn đề quan trọng, tránh lan man. TRẢ LỜI BẰNG TIẾNG VIỆT"
                    },
                    {
                      role: "user",
                      content: `PR Title: ${prTitle}\nPR Description: ${prBody}\n\nFiles:\n${files}`
                    }
                  ],
                  max_tokens: 4000, // Giới hạn hợp lý để tiết kiệm chi phí
                  temperature: 0.5
                });

                const reviewContent = aiResponse.choices[0].message.content;

                await octokit.issues.createComment({
                  owner,
                  repo,
                  issue_number: pull_number,
                  body: `### AI Code Review by Senior Bot\n\n${reviewContent}`,
                });
              } catch (error) {
                console.error("Error during AI review:", error);
                const { Octokit } = await import("@octokit/rest");
                const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
                await octokit.issues.createComment({
                  owner: process.env.GITHUB_REPOSITORY.split("/")[0],
                  repo: process.env.GITHUB_REPOSITORY.split("/")[1],
                  issue_number: process.env.GITHUB_REF.split("/")[2],
                  body: `### AI Code Review Failed\nCó lỗi xảy ra trong quá trình review: ${error.message}`,
                });
                process.exit(1);
              }
            })();
          '