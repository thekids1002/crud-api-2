name: AI Code Review with ChatGPT

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install @octokit/rest openai --save-dev

      - name: Run AI Code Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          node -e '
            (async () => {
              try {
                const { Octokit } = await import("@octokit/rest");
                const OpenAI = await import("openai");

                const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
                const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
                const pull_number = process.env.GITHUB_REF.split("/")[2];

                const response = await octokit.pulls.listFiles({
                  owner,
                  repo,
                  pull_number,
                });

                const files = response.data.map(f => `${f.filename}:\n${f.patch || "No changes"}`).join("\n\n");

                const openai = new OpenAI.default({
                  apiKey: process.env.OPENAI_API_KEY,
                });

                const aiResponse = await openai.chat.completions.create({
                  model: "gpt-3.5-turbo",
                  messages: [
                    {
                      role: "system",
                      content: "Bạn là một lập trình viên cấp cao, có nhiều kinh nghiệm trong việc đánh giá và tối ưu code. Hãy review đoạn code sau và đưa ra nhận xét chi tiết:\\n- Kiểm tra lỗi logic, bug tiềm ẩn.\\n- Đánh giá coding style, best practices.\\n- Đề xuất cách tối ưu hiệu suất.\\n- Nhận xét về cách đặt tên biến, hàm, class (có rõ ràng, dễ hiểu không?).\\n- Kiểm tra bảo mật (SQL Injection, XSS, CSRF nếu có).\\n- Đề xuất refactor nếu cần."
                    },
                    {
                      role: "user",
                      content: `Review pull request này:\\n\\n${files}`
                    }
                  ],
                  max_tokens: 1000,
                });

                const reviewContent = aiResponse.choices[0].message.content;

                await octokit.issues.createComment({
                  owner,
                  repo,
                  issue_number: pull_number,
                  body: `### AI Code Review by ChatGPT\n\n${reviewContent}`,
                });
              } catch (error) {
                console.error("Error during AI review:", error);
                const { Octokit } = await import("@octokit/rest");
                const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
                await octokit.issues.createComment({
                  owner: process.env.GITHUB_REPOSITORY.split("/")[0],
                  repo: process.env.GITHUB_REPOSITORY.split("/")[1],
                  issue_number: process.env.GITHUB_REF.split("/")[2],
                  body: "### AI Code Review Failed\nCó lỗi xảy ra trong quá trình review. Vui lòng kiểm tra log workflow.",
                });
                process.exit(1);
              }
            })();
          '