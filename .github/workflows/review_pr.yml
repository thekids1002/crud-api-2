name: AI Code Review with ChatGPT

on:
  pull_request:
    types: [opened, synchronize, reopened]

# Thêm permissions để đảm bảo GITHUB_TOKEN có quyền comment
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      # Bước 1: Checkout mã nguồn
      - name: Checkout code
        uses: actions/checkout@v4

      # Bước 2: Thiết lập Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Bước 3: Cài đặt dependencies
      - name: Install dependencies
        run: npm install @octokit/rest openai --save-dev

      # Bước 4: Chạy AI Review với ChatGPT
      - name: Run AI Code Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          node -e '
            (async () => {
              try {
                // Dynamic import cho ESM modules
                const { Octokit } = await import("@octokit/rest");
                const OpenAI = await import("openai");

                // Khởi tạo Octokit
                const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
                const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
                const pull_number = process.env.GITHUB_REF.split("/")[2];

                // Lấy danh sách file thay đổi trong PR
                const response = await octokit.pulls.listFiles({
                  owner,
                  repo,
                  pull_number,
                });

                // Tạo nội dung diff để gửi cho AI
                const files = response.data.map(f => `${f.filename}:\n${f.patch || "No changes"}`).join("\n\n");

                // Khởi tạo OpenAI API (phiên bản mới)
                const openai = new OpenAI.default({
                  apiKey: process.env.OPENAI_API_KEY,
                });

                // Gửi yêu cầu review đến ChatGPT
                const aiResponse = await openai.chat.completions.create({
                  model: "gpt-4o-mini",
                  messages: [
                    {
                      role: "system",
                      content: "Bạn là một chuyên gia review code. Hãy phân tích các thay đổi trong pull request và đưa ra nhận xét chi tiết, bao gồm điểm tốt, điểm cần cải thiện, và gợi ý nếu có."
                    },
                    {
                      role: "user",
                      content: `Review pull request này:\n\n${files}`
                    }
                  ],
                  max_tokens: 1000,
                });

                const reviewContent = aiResponse.choices[0].message.content;

                // Đăng comment vào PR
                await octokit.issues.createComment({
                  owner,
                  repo,
                  issue_number: pull_number,
                  body: `### AI Code Review by ChatGPT\n\n${reviewContent}`,
                });
              } catch (error) {
                console.error("Error during AI review:", error);
                // Đăng comment lỗi nếu có vấn đề
                const { Octokit } = await import("@octokit/rest");
                const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
                await octokit.issues.createComment({
                  owner: process.env.GITHUB_REPOSITORY.split("/")[0],
                  repo: process.env.GITHUB_REPOSITORY.split("/")[1],
                  issue_number: process.env.GITHUB_REF.split("/")[2],
                  body: "### AI Code Review Failed\nCó lỗi xảy ra trong quá trình review. Vui lòng kiểm tra log workflow.",
                });
                process.exit(1);
              }
            })();
          '